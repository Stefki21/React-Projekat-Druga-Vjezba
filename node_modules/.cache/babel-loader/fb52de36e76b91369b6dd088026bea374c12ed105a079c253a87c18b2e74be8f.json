{"ast":null,"code":"var _jsxFileName = \"E:\\\\treci-projekat\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Main from \"./components/Main\";\nimport Header from \"./components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cartDisplayHelper, setCartDisplayHelper] = useState(false);\n\n  // Move the state update logic inside a useEffect hook\n  useEffect(() => {\n    // Pass the state updater function to the Main component\n    // This ensures that the Main component doesn't trigger state updates during rendering\n    // Instead, it updates the state after the render phase is complete\n    return () => setCartDisplayHelper(func => func);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Main, {\n      handler: setCartDisplayHelper\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      cartDisplay: cartDisplayHelper\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9cy1dEe05zadMltA19+shQYMi1E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Main","Header","jsxDEV","_jsxDEV","App","_s","cartDisplayHelper","setCartDisplayHelper","useEffect","func","Fragment","children","handler","fileName","_jsxFileName","lineNumber","columnNumber","cartDisplay","_c","$RefreshReg$"],"sources":["E:/treci-projekat/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport Main from \"./components/Main\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  const [cartDisplayHelper, setCartDisplayHelper] = useState(false);\n\n  // Move the state update logic inside a useEffect hook\n  useEffect(() => {\n    // Pass the state updater function to the Main component\n    // This ensures that the Main component doesn't trigger state updates during rendering\n    // Instead, it updates the state after the render phase is complete\n    return () => setCartDisplayHelper(func => func);\n  }, []);\n\n  return (\n    <React.Fragment>\n      {/* Pass the state updater function down to the Main component */}\n      <Main handler={setCartDisplayHelper} />\n      <Header cartDisplay={cartDisplayHelper} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAEjE;EACAS,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA,OAAO,MAAMD,oBAAoB,CAACE,IAAI,IAAIA,IAAI,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA,CAACL,KAAK,CAACY,QAAQ;IAAAC,QAAA,gBAEbR,OAAA,CAACH,IAAI;MAACY,OAAO,EAAEL;IAAqB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCb,OAAA,CAACF,MAAM;MAACgB,WAAW,EAAEX;IAAkB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAErB;AAACX,EAAA,CAlBQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAoBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}